<UserControl x:Class="EasySaveWPF.View.BackupView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:t = "clr-namespace:EasySaveWPF.Resources"
             xmlns:local="clr-namespace:EasySaveWPF.View"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <Style x:Key="StyledProgressBar" TargetType="ProgressBar">
            <Setter Property="Foreground" Value="Green"/>
            <Setter Property="BorderBrush" Value="Gray"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ProgressBar">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}" 
                            CornerRadius="5">
                            <Grid>
                                <Rectangle x:Name="PART_Track" Fill="{TemplateBinding Background}"/>
                                <Rectangle x:Name="PART_Indicator" HorizontalAlignment="Left" Fill="{TemplateBinding Foreground}" RadiusX="4" RadiusY="4"/>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="Background" Value="#2d2c4d"/>
            <Setter Property="Foreground" Value="White"/>
        </Style>
        <Style TargetType="{x:Type DataGrid}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderBrush" Value="#CABFFF"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGrid}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}" 
                            Padding="{TemplateBinding Padding}" 
                            SnapsToDevicePixels="True"
                            CornerRadius="8">
                            <ScrollViewer Focusable="false" Name="DG_ScrollViewer" HorizontalScrollBarVisibility="Auto">
                                <ScrollViewer.Template>
                                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="*"/>
                                            </Grid.RowDefinitions>
                                            <DataGridColumnHeadersPresenter Grid.Row="0" Name="PART_ColumnHeadersPresenter"/>
                                            <ScrollContentPresenter Grid.Row="1" Name="PART_ScrollContentPresenter"/>
                                        </Grid>
                                    </ControlTemplate>
                                </ScrollViewer.Template>
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <local:TypeToVisibilityConverter x:Key="TypeToVisibilityConverter"/>

    </UserControl.Resources>



    <Grid>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <TextBlock Text="{x:Static t:Translation.backups_button}"
                   FontSize="30"
                   Foreground="{DynamicResource Text}"
                   Margin="10,10,0,0"
                   HorizontalAlignment="Left"
                   Grid.Row="0"
                   FontWeight="Bold" Width="300"
                   TextWrapping ="Wrap"/>


        <!--  <TextBox Width="250"
               Height="30"
               VerticalContentAlignment="Center"
               HorizontalAlignment="Left"
               VerticalAlignment="Center"
               Margin="250,0,0,0"
               Style="{StaticResource SearchBar}"/>  -->





        <StackPanel Orientation="Horizontal"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Top"
                    Grid.Row="0"
                    Margin="0,40,10,0">
            <Button Content="{x:Static t:Translation.run_all}"
                    Command="{Binding RunFactoCommand}"
                    CommandParameter="all"
                    Width="120"
                    Height="30"
                    Style="{StaticResource ButtonTheme}" />


        </StackPanel>
        <Border   Width="150" Background="{DynamicResource ButtonXtoY}" BorderBrush="{DynamicResource ButtonXtoY}" BorderThickness="2" CornerRadius="5" HorizontalAlignment="Left" VerticalAlignment="Top" Height="37" Margin="380,33,0,0">
            <StackPanel 
                Background="{DynamicResource ButtonXtoY}" 
                Margin= "0,0,0,0" 
                Orientation="Horizontal" 
                VerticalAlignment="Center" 
                HorizontalAlignment="Right">
                <Border CornerRadius="5" Margin="5" Height="22" Background="{DynamicResource TextButtonMenu}" BorderBrush="{DynamicResource TextButtonMenu}" BorderThickness="2">
                    <Button Width="15"  Height="22" Command="{Binding RunFactoCommand}" CommandParameter="some" Background="{DynamicResource TextButtonMenu}" BorderBrush="{DynamicResource TextButtonMenu}">
                        <Button.Content>
                            <Image Margin="0,0,0,5" Width="12" Height="12" Source="/Images/runall.png" Stretch="Uniform" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Button.Content>
                    </Button>
                </Border>
                <Border CornerRadius="5" Height="22" Background="{DynamicResource TextButtonMenu}" BorderBrush="{DynamicResource TextButtonMenu}" BorderThickness="2">
                    <TextBox Width="25" Height="22" Text="{Binding FromJob}"  Background="{DynamicResource TextButtonMenu}" BorderBrush="{DynamicResource TextButtonMenu}" Name="NumberTextBox_1" PreviewTextInput="NumberValidationTextBox" />
                </Border>
                <ComboBox Width="48" Margin="5" Background="White" BorderBrush="White" VerticalAlignment="Center">
                    <ComboBoxItem Content="{x:Static t:Translation.to_menu}" VerticalAlignment="Center"/>
                    <ComboBoxItem Content="{x:Static t:Translation.and_menu}" VerticalAlignment="Center"/>
                </ComboBox>
                <Border CornerRadius="5" Height="22" Margin="0,0,5,0" Background="{DynamicResource TextButtonMenu}" BorderBrush="{DynamicResource TextButtonMenu}" BorderThickness="2">
                    <TextBox Width="25" Height="22" Background="{DynamicResource TextButtonMenu}" BorderBrush="{DynamicResource TextButtonMenu}" Text="{Binding ToJob}" Name="NumberTextBox_2" PreviewTextInput="NumberValidationTextBox" />
                </Border>

            </StackPanel>
        </Border>

        <DataGrid ItemsSource="{Binding BackupJobs}" 
                  Background="#252526" 
                  Foreground="black" 
                  BorderBrush="#3F3F46" 
                  BorderThickness="1" 
                  RowBackground="#B7B5BE"
                  Grid.Row="1"
                  ColumnHeaderStyle="{StaticResource {x:Type DataGridColumnHeader}}"   
                  SelectedItem="{Binding SelectedJob, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                  Margin="10,10,10,29"  
                  HorizontalAlignment="Stretch"
                  VerticalAlignment="Stretch"
                  CanUserResizeColumns="True"
                  AutoGenerateColumns="False"
                  CanUserAddRows="False">
            <DataGrid.Columns>

                <DataGridTextColumn Header="{x:Static t:Translation.header_id}" Binding="{Binding Id}" Width="10"/>
                <DataGridTextColumn Header="{x:Static t:Translation.header_name}" Binding="{Binding Name}" Width="*" />
                <DataGridTextColumn Header="{x:Static t:Translation.header_source}" Binding="{Binding SourceDir}" Width="*"/>
                <DataGridTextColumn Header="{x:Static t:Translation.header_target}" Binding="{Binding TargetDir}" Width="*" />
                <DataGridTextColumn Header="{x:Static t:Translation.header_type}" Binding="{Binding Type}" Width="100" />
                <DataGridTextColumn Header="{x:Static t:Translation.header_status}" Binding="{Binding State.State}" Width="50" />
                <DataGridTextColumn Header="{x:Static t:Translation.header_progress}" Binding="{Binding State.Progress }" Width="100" />

                <DataGridTemplateColumn Header="Actions" Width="50">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <Button Visibility="{Binding State.State, Converter={StaticResource TypeToVisibilityConverter}, ConverterParameter=play}" Background="#B7B5BE" BorderBrush="#B7B5BE"  Command="{Binding DataContext.RunFactoCommand, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" CommandParameter="{Binding}">
                                    <Button.Content>
                                        <Image   Width="15" Height="15" Source="/Images/runall.png" Stretch="Uniform" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Button.Content>
                                </Button>

                                <Button Background="#B7B5BE" BorderBrush="#B7B5BE" Visibility="{Binding State.State, Converter={StaticResource TypeToVisibilityConverter}, ConverterParameter=pause}" Command="{Binding DataContext.PauseCommand, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" CommandParameter="{Binding}" >
                                    <Button.Content>
                                        <Image   Width="15" Height="15" Source="/Images/pause.png" Stretch="Uniform" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Button.Content>
                                </Button>
                                <Button Background="#B7B5BE" BorderBrush="#B7B5BE"  Command="{Binding DataContext.DeleteCommand, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" CommandParameter="{Binding}">
                                    <Button.Content>
                                        <Image   Width="15" Height="15" Source="/Images/Delete.png" Stretch="Uniform" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Button.Content>
                                </Button>

                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>

        <StackPanel VerticalAlignment="Top" 
                    Margin="10,0,10,10" 
                    Grid.Row="2">
            <TextBlock Text="{x:Static t:Translation.running_backup}" 
                       Foreground="{DynamicResource Text}" 
                       FontSize="18" 
                       FontWeight="Bold"/>
            <TextBlock x:Name="currentBackupName" Text="{Binding SelectedJob.Name}" 
                       Foreground="{DynamicResource Text}" 
                       FontSize="14"/>
            <TextBlock x:Name="currentFile" Text="{Binding SelectedJob.State.SourceFilePath}" 
           Foreground="{DynamicResource Text}" 
           FontSize="14"/>


            <ProgressBar x:Name="fileProgress" 
             Height="10" 
             Margin="0,10,0,0"
             Minimum="0" 
             Maximum="{Binding SelectedJob.State.TotalFilesToCopy}" 
             Value="{Binding SelectedJob.State.FileProgress, Mode=OneWay}"
             Style="{StaticResource StyledProgressBar}"/>


            <TextBlock Foreground="{DynamicResource Text}" 
                       FontSize="12" 
                       HorizontalAlignment="Right">
                <TextBlock.Text>
                    <MultiBinding StringFormat="Nombre de fichiers {0} / {1}">
                        <Binding Path="SelectedJob.State.FileProgress" Mode="TwoWay"/>
                        <Binding Path="SelectedJob.State.TotalFilesToCopy"/>
                    </MultiBinding>
                </TextBlock.Text>

            </TextBlock>
            <ProgressBar x:Name="fileSizeProgress" 
             Height="10" 
             Margin="0,10,0,0"
             Minimum="0" 
             Maximum="{Binding SelectedJob.State.TotalFilesSize}" 
             Value="{Binding SelectedJob.State.FileSizeProgress, Mode=OneWay}"
             Style="{StaticResource StyledProgressBar}"/>


            <TextBlock Foreground="{DynamicResource Text}" 
                       FontSize="12" 
                       HorizontalAlignment="Right">
                <TextBlock.Text>
                    <MultiBinding StringFormat="Taille des fichiers en octet {0} / {1}">
                        <Binding Path="SelectedJob.State.FileSizeProgress" Mode="TwoWay"/>
                        <Binding Path="SelectedJob.State.TotalFilesSize"/>
                    </MultiBinding>
                </TextBlock.Text>
            </TextBlock>
        </StackPanel>

    </Grid>

</UserControl>






