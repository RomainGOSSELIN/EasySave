<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="change_at_restart" xml:space="preserve">
    <value>Changes will take place on next startup</value>
  </data>
  <data name="desc_create" xml:space="preserve">
    <value>Create a new backup job</value>
  </data>
  <data name="desc_delete" xml:space="preserve">
    <value>Delete a backup job</value>
  </data>
  <data name="desc_options" xml:space="preserve">
    <value>Set options (such as language)</value>
  </data>
  <data name="desc_run" xml:space="preserve">
    <value>Start a backup job</value>
  </data>
  <data name="desc_show" xml:space="preserve">
    <value>Display a backup job</value>
  </data>
  <data name="option_id" xml:space="preserve">
    <value>Backup job number</value>
  </data>
  <data name="option_lang" xml:space="preserve">
    <value>Language selection</value>
  </data>
  <data name="option_name" xml:space="preserve">
    <value>Name of the backup job</value>
  </data>
  <data name="option_type" xml:space="preserve">
    <value>Select a complete backup job</value>
  </data>
  <data name="number" xml:space="preserve">
    <value>Number</value>
  </data>
  <data name="no_job_found" xml:space="preserve">
    <value>No jobs found</value>
  </data>
  <data name="job_name" xml:space="preserve">
    <value>Job Name</value>
  </data>
  <data name="destination" xml:space="preserve">
    <value>Destination</value>
  </data>
  <data name="cant_create_more_job" xml:space="preserve">
    <value>You cannot create more than 5 jobs.</value>
  </data>
  <data name="delete_job_success" xml:space="preserve">
    <value>Job number {0} was successfully deleted.</value>
  </data>
  <data name="create_job_success" xml:space="preserve">
    <value>Job {0} was created at location {1} from {2} to {3} with type {4}</value>
  </data>
  <data name="job_doesnt_exist" xml:space="preserve">
    <value>Job {0} does not exist</value>
  </data>
  <data name="job_execution" xml:space="preserve">
    <value>Running backup job: {0}</value>
  </data>
  <data name="save_type_error" xml:space="preserve">
    <value>The backup type is invalid.</value>
  </data>
  <data name="backup_success" xml:space="preserve">
    <value>The backup was completed successfully!</value>
  </data>
  <data name="backup_error" xml:space="preserve">
    <value>An error occurred while saving: {0}</value>
  </data>
  <data name="copy_file" xml:space="preserve">
    <value>Copy of file: {0}</value>
  </data>
  <data name="incorrect_format" xml:space="preserve">
    <value>File format {0} is not allowed for backup.</value>
  </data>
  <data name="maxsize_error" xml:space="preserve">
    <value>File {0} exceeds the maximum allowed size.</value>
  </data>
  <data name="copy_success" xml:space="preserve">
    <value>The copy is finished!</value>
  </data>
  <data name="option_dest" xml:space="preserve">
    <value>Destination of the backup job directory</value>
  </data>
  <data name="option_source" xml:space="preserve">
    <value>Backup job directory source</value>
  </data>
  <data name="id_must_number" xml:space="preserve">
    <value>The ID must be a number.</value>
  </data>
  <data name="path_must_contain_brackets" xml:space="preserve">
    <value>Paths must be in quotes</value>
  </data>
  <data name="press_key" xml:space="preserve">
    <value>Press a key to start...</value>
  </data>
  <data name="settings_button" xml:space="preserve">
    <value>⚙️ Settings</value>
  </data>
  <data name="add_backup_button" xml:space="preserve">
    <value>➕ Add 
Backup</value>
  </data>
  <data name="source" xml:space="preserve">
    <value>Source</value>
  </data>
  <data name="source_directory_doesnt_exist" xml:space="preserve">
    <value>The source directory does not exist.</value>
  </data>
  <data name="target_source_must_be_different" xml:space="preserve">
    <value>The source and target directory cannot be the same.</value>
  </data>
  <data name="title" xml:space="preserve">
    <value>File backup application</value>
  </data>
  <data name="type" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="welcome" xml:space="preserve">
    <value>Welcome to the EasySave backup management software. Write 'exit' to quit.</value>
  </data>
  <data name="app_shutdown_language_changed" xml:space="preserve">
    <value>The application will shut down to apply the language change.</value>
  </data>
  <data name="backups_button" xml:space="preserve">
    <value>🗃 Backups</value>
  </data>
  <data name="business_software" xml:space="preserve">
    <value>Business Software</value>
  </data>
  <data name="add_or_remove_encryption" xml:space="preserve">
    <value>Add / Remove extension for encryption</value>
  </data>
  <data name="dark" xml:space="preserve">
    <value>Dark</value>
  </data>
  <data name="light" xml:space="preserve">
    <value>Light</value>
  </data>
  <data name="list_extension_encryption" xml:space="preserve">
    <value>List of extension for encryption</value>
  </data>
  <data name="logs_format" xml:space="preserve">
    <value>Logs Format</value>
  </data>
  <data name="save_differencial" xml:space="preserve">
    <value>Differencial</value>
  </data>
  <data name="save_full" xml:space="preserve">
    <value>Full</value>
  </data>
  <data name="theme" xml:space="preserve">
    <value>Theme</value>
  </data>
  <data name="run_all" xml:space="preserve">
    <value>Run all</value>
  </data>
  <data name="running_backup" xml:space="preserve">
    <value>Running backup</value>
  </data>
  <data name="business_software_running" xml:space="preserve">
    <value>Business software running.</value>
  </data>
  <data name="error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="creation" xml:space="preserve">
    <value>Creation</value>
  </data>
  <data name="success" xml:space="preserve">
    <value>Success</value>
  </data>
  <data name="name_empty" xml:space="preserve">
    <value>Please enter a name</value>
  </data>
  <data name="target_empty" xml:space="preserve">
    <value>Please enter a destination directory</value>
  </data>
  <data name="and_menu" xml:space="preserve">
    <value>and</value>
  </data>
  <data name="to_menu" xml:space="preserve">
    <value>to</value>
  </data>
</root>